# name: "publish package to npm"

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2

#       - uses: actions/setup-node@v2
#         with:
#           node-version: 16
#           registry-url: https://registry.npmjs.org

#       - name: install dependencies
#         run: npm ci

#       - name: run build
#         run: npm run build

#       - name: publish
#         run: npm publish --access public
#         env:
#           NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}

name: Release
on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: "main-branch"

jobs:
  changelog:
    if: github.repository == 'SubxX/ng-environment-generator'
    runs-on: ubuntu-latest

    steps:
      # Create a temporary, uniquely named branch to push release info to
      - name: create temporary branch
        uses: peterjgrainger/action-create-branch@v2.3.0
        id: create-branch
        with:
          branch: "release-from-${{ github.sha }}"
          sha: "${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # check out the repository afterwards
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # fetch branches and switch to the temporary branch
      - name: switch to new branch
        run: git fetch --all && git checkout --track origin/release-from-${{ github.sha }}

      # create release info and push it upstream
      - name: conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@latest
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          version-file: "./package.json,./package-lock.json"
          git-branch: "release-from-${{ github.sha }}"
          skip-on-empty: false
          skip-git-pull: true
          release-count: 5

      # create PR using GitHub CLI
      - name: create PR with release info
        id: create-pr
        run: gh pr create --base main --head release-from-${{ github.sha }} --title 'Merge new release into main' --body 'Created by Github action'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # merge PR using GitHub CLI
      - name: merge PR with release info
        id: merge-pr
        run: gh pr merge --admin --merge --subject 'Merge release info' --delete-branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # release info is now in release so we can continue as before
      - name: create release with last commit
        uses: actions/create-release@v1
        if: steps.changelog.outputs.skipped == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16
  #         registry-url: https://registry.npmjs.org

  #     - name: install dependencies
  #       run: npm ci

  #     - name: run build
  #       run: npm run build

  #     - name: publish
  #       run: npm publish --access public
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.NPM_AUTH_TOKEN}}
